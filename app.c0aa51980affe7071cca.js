webpackJsonp([0],{298:function(e,n,t){var i=t(1),o=t(163);o.__esModule&&(o=o.default),e.exports=i.createClass({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:t(631)}},componentWillMount:function(){},render:function(){return i.createElement(o,Object.assign({},this.props,{content:this.state.content}))}})},299:function(e,n){},300:function(e,n){},301:function(e,n){},303:function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}var o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},r=t(1),l=i(r),a=t(73),c=i(a),s=t(302),u=i(s),p=t(297);t(300),t(299),t(301);var f={},m=[{path:"/",title:"Introduction",component:t(298)}];c.default.render(l.default.createElement("div",null,l.default.createElement(u.default,{href:"https://github.com/liorshub/events-timeline",bannerColor:"#fff",octoColor:"#000",width:80,height:80,direction:"right"}),l.default.createElement(p.Catalog,{imports:f,pages:m,specimens:{javascript:function(e){return l.default.createElement(p.CodeSpecimen,o({},e,{lang:"javascript"}))},js:function(e){return l.default.createElement(p.CodeSpecimen,o({},e,{lang:"javascript"}))},jsx:function(e){return l.default.createElement(p.ReactSpecimen,e)}},title:"events-timeline v1.0.4"})),document.getElementById("app"))},631:function(e,n){e.exports="# Events Timelime\n\nThis is a React component to display events on a timeline.\nEvents can have a title or just be a point in \"time\"\nWell, There is not an actual time, the events are just spread across a line...\n\n### How to use\n##### Install\n```npm install events-timeline```\n\n##### Use in a view/component\n```javascript\n    import EventsTimeline from 'events-timeline';\n    ...\n    <EventsTimeline\n        points={[{ title: 'First' }, {}, { title: 'Third' }]}\n        onClick={val => console.log(val)}\n        color=\"blue\"\n        emptyColor=\"yellow\"\n        currentIndex={2}\n    />\n```\n\n##### Component's Properties\n| Property      | Type             | Default  | Notes |\n| ------------- |:-----------------|:--------:|:-------------------------------------------|\n| color         | string           | ```'#5151ff'``` | The color for 'filled' line & events\n| currentIndex  | number           |               0 | The last point that will be 'filled' from the begining \n| emptyColor    | string           | ```'#ffffff'``` | The color for 'empty' line & events\n| onClick       | function         |                 | The callback when click on event\n| points        | Array (Required) |                 | The events to display.  An event can be an empty object or an object with 'title' property\n\nLicense\n----\n\nMIT\n"}},[303]);